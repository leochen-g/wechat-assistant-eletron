name: Build & Release

on:
 push:
   branches:
    - main
   tags:
      - v*
jobs:
    release:
        name: build and release electron app
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
              os: [windows-latest, macos-latest, ubuntu-latest]
              arch: [ x64 ]
              include:
                - os: windows-latest
                  arch: ia32
                - os: ubuntu-latest
                  arch: armv7l
              exclude:
                - os: windows-latest
                  arch: arm64

        steps:
          - name: Check out git repository
            uses: actions/checkout@v3.0.0

          - name: Install Node.js
            uses: actions/setup-node@v3.0.0
            with:
              node-version: 16.x

          - name: Install Dependencies
            run: yarn --network-timeout 100000 || yarn --network-timeout 100000 || yarn --network-timeout 100000

          - name: Build Electron App
            run: yarn make --arch=${{ matrix.arch }}
            env:
              GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

          - name: Cleanup Artifacts for Windows
            if: matrix.os == 'windows-latest'
            run: |
              npx rimraf "out/!(*.exe)"

          - name: Cleanup Artifacts for MacOS
            if: matrix.os == 'macos-latest'
            run: |
              npx rimraf "out/!(*.dmg)"

          - name: upload artifacts
            uses: actions/upload-artifact@v3.0.0
            with:
              name: ${{ matrix.os }}
              path: out

          - name: release
            uses: softprops/action-gh-release@v0.1.14
            if: startsWith(github.ref, 'refs/tags/')
            with:
              draft: true
              files: |
                out/**/*.deb
                out/**/*.dmg
                out/**/*setup*.exe
                out/**/*.nupkg
                out/**/*.rpm
                out/**/*.zip
                out/**/RELEASES
            env:
              GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
